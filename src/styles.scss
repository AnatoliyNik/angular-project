@use "variables";
@use "keyframes";
@use "mixins";
@use "@angular/material/prebuilt-themes/indigo-pink.css";
@import url('https://fonts.googleapis.com/css2?family=Roboto');

* {
  margin: 0;
  padding: 0;
  box-sizing: border-box;
  list-style: none;
}

body {
  color: variables.$darkColor;
  background-color: variables.$bodyBackgroundColor;
  font-family: 'Roboto', sans-serif;
}

.container {
  max-width: 1200px;
  margin: 0 auto;
  padding: 0 20px;
}

.btn {
  display: inline-flex;
  justify-content: center;
  align-items: center;
  gap: 5px;
  cursor: pointer;
  border: none;
  outline: none;
  background-color: variables.$lightColor;
  padding: 5px 15px;
  border-radius: 5px;
  box-shadow: variables.$boxShadow;
  font: 1rem 'Roboto', sans-serif;

  &:hover:not([disabled]) {
    opacity: .9;
  }

  &:active:not([disabled]) {
    opacity: .8;
  }

  &:disabled {
    opacity: .6;
    cursor: not-allowed;
    filter: grayscale(1);
  }
}

.btn-link {
  background-color: transparent;
  box-shadow: none;
  color: inherit;
  padding: 0;
}

.btn-success {
  background-color: variables.$successColor;
  color: variables.$lightColor;
}

.btn-info {
  background-color: variables.$infoColor;
  color: variables.$lightColor;
}


.btn-large {
  padding: 10px 15px;
}

.form-control {
  outline: none;
  width: 100%;
  border: 1px solid variables.$borderColor;
  border-radius: 5px;
  padding: 10px 15px;
  font-size: 1rem;

  &::placeholder {
    color: variables.$dimColor;
    font-size: 14px;
  }
}

.error {
  color: variables.$warnColor;
  font-size: 14px;
  position: absolute;
  animation: appear .2s ease-out;
}

.error-container {
  position: relative;
  height: 1rem;
}

.error-message {
  color: variables.$warnColor;
}

.form-control.ng-invalid.ng-touched {
  @include mixins.errorBorder;
}
